
// 数组是一种线性表数据结构。它用一组连续的空间来存储相同类型的数据。
// 数组的特点：
// 一、线性表。顾名思义，线性表就是数据拍成线性的结构，每个数据只有前后两个方向。
// 线性表还包括链表，队列和栈等。
// 二、连续的内存空间和相同类型的数据。正因此，数组支持随机访问。查询数据的
// 时间复杂度为O(1)。但是插入删除性能较差，时间复杂度为O(n)

// 计算机通过数组查询数据的寻址公式：
a[i]_address = base_address + i*data_type_size;

// C 语言中，会存在数组访问越界的问题
// 代码示例
int main(int argc, char* argc[]) {
	int i = 0;
	int arr[3] = {0};
	for (; i <=3; ++i) {
		arr[i] = 0;
		printf('hello world \n');
	}
	return 0;
}

// 很多语言提供了容器类代替数组，如java中的ArrayList
// ArrayList 最大的优势就是可以将很多组操作的细节封装起来；
// 另外一个优势就是支持动态扩容。

// 数组在删除元素时，时间复杂度为O(n),如果存在频繁的删除操作，
// 就会产生大量的数据搬移操作，大大降低了运行的性能。可以采用
// 标记清除垃圾回收算法的方式减少删除次数和数据搬移工作。

// JVM标记清除算法
// 大多数主流虚拟机采用可达性分析算法来判断对象是否存活。
// 在标记阶段会遍历所有的GC ROOTS,将所有GCROOTS可达的对象
// 标记为存货，只有当标记工作完成后，清理工作才会开始。